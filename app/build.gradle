apply plugin: 'com.android.application'
apply plugin: 'realm-android'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
//    androidTestCompile 'com.android.support:support-annotations:25.1.0'
    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:25.1.0'
    }
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //base
    implementation rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["cardview-v7"]

    //ui
//    compile rootProject.ext.dependencies["material-calendarview"]
//    compile rootProject.ext.dependencies["materialsearchview"]
//    compile rootProject.ext.dependencies["multiline-collapsingtoolbar"]
//    compile rootProject.ext.dependencies["html-textview"]
    compile rootProject.ext.dependencies["PhotoView"]
    compile rootProject.ext.dependencies["glide-transformations"]
    compile rootProject.ext.dependencies["smart-refresh"]
    compile rootProject.ext.dependencies["banner"]
    compile rootProject.ext.dependencies["bottom_bar"]

    //rx
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["rxpermissions"]

    //network
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-converter-gson"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["okhttp-logging-interceptor"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-okhttp3-integration"]
    compile rootProject.ext.dependencies["jsoup"]

    //di  kapt
    compile rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compileOnly rootProject.ext.dependencies["annotation"]

    //other
    compile rootProject.ext.dependencies["multidex"]
    compile rootProject.ext.dependencies["fragmentation"]
    compile rootProject.ext.dependencies["logger"]

    //canary
    debugCompile rootProject.ext.dependencies["crashreport"]
    debugCompile rootProject.ext.dependencies["blockcanary-android"]
    releaseCompile rootProject.ext.dependencies["blockcanary-no-op"]
    debugCompile rootProject.ext.dependencies["leakcanary-android"]
    releaseCompile rootProject.ext.dependencies["leakcanary-android-no-op"]

}
